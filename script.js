document.addEventListener('DOMContentLoaded', () => {
    const API_URL = 'https://api.deepseek.com/v1/chat/completions';
    const DEFAULT_MODEL = 'deepseek-reasoner';
    const MAX_TOKENS = 4096;
    
    // –ë–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç —Å –≤–∞—à–∏–º —Å—Ç–∏–ª–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    const BASE_PROMPT = `–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –±—ç–∫–≥—Ä–∞—É–Ω–¥–æ–º. –°–æ–∑–¥–∞–≤–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, –ø—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è **–∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤** —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ SEO –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏—é.

**–°—Ç—Ä–æ–≥–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:**
üõçÔ∏è **1. –ó–∞–≥–æ–ª–æ–≤–æ–∫:**  
   ‚Ä¢ –í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π —Å —ç–º–æ–¥–∑–∏ üõçÔ∏è + **–∂–∏—Ä–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫** —Å –∫–ª—é—á–µ–≤—ã–º –£–¢–ü/–≤—ã–≥–æ–¥–æ–π  
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä: `üõçÔ∏è **–ü—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ [–ù–∞–∑–≤–∞–Ω–∏–µ] –¥–ª—è [–¶–µ–ª–µ–≤–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å] (SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ)**`

üöÄ **2. –ë–ª–æ–∫ "–ö–ª—é—á–µ–≤—ã–µ –≤—ã–≥–æ–¥—ã":**  
   ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–æ–∫: `**üéØ –ö–ª—é—á–µ–≤—ã–µ –≤—ã–≥–æ–¥—ã:**`  
   ‚Ä¢ –§–æ—Ä–º–∞—Ç –ø—É–Ω–∫—Ç–æ–≤: `‚Ä¢ ‚Üí [–≠–º–æ–¥–∑–∏] [–í—ã–≥–æ–¥–∞] ‚Äî [–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ/—Ü–∏—Ñ—Ä–∞]`  
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä: `‚Ä¢ ‚Üí üïí 3 —á–∞—Å–∞ –¥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–≤–∏–∂–µ–Ω–∏—è ‚Äî –º–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–æ—Å—Ç–æ–π!`

üí° **3. –£–¢–ü (–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –¢–æ—Ä–≥–æ–≤–æ–µ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ):**  
   ‚Ä¢ –í—ã–¥–µ–ª—è–π –±–ª–æ–∫: `**üí° –£–¢–ü:** [–¢–µ–∫—Å—Ç]`  
   ‚Ä¢ –ê–∫—Ü–µ–Ω—Ç –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö  
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä: `**üí° –£–¢–ü:** –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Å—Ç–∞–≤ —Å –¥–≤–æ–π–Ω–æ–π –∑–∞—â–∏—Ç–æ–π –æ—Ç –≤–æ–¥—ã –∏ –£–§-–ª—É—á–µ–π!`

üìä **4. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**  
   ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–æ–∫: `**üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**`  
   ‚Ä¢ –§–æ—Ä–º–∞—Ç: —Ç–∞–±–ª–∏—Ü–∞ Markdown —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏  
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä:  
     `| –ü–∞—Ä–∞–º–µ—Ç—Ä          | –ó–Ω–∞—á–µ–Ω–∏–µ         |`  
     `|-------------------|------------------|`  
     `| –†–∞—Å—Ö–æ–¥            | 0.6-0.9 –ª/–º¬≤    |`

üîß **5. –û–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:**  
   ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–æ–∫: `**üîß –ì–¥–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å?**`  
   ‚Ä¢ –§–æ—Ä–º–∞—Ç: `‚Ä¢ ‚úî [–≠–º–æ–¥–∑–∏] [–°—Ü–µ–Ω–∞—Ä–∏–π] ‚Äî [–ü—Ä–æ–±–ª–µ–º–∞/—Ä–µ–∑—É–ª—å—Ç–∞—Ç]`  
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä: `‚Ä¢ ‚úî üõ£Ô∏è –£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –æ–±–æ—á–∏–Ω ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ—Å—ã–ø–∞–Ω–∏–µ —â–µ–±–Ω—è!`

üìå **6. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è (–µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ):**  
   ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–æ–∫: `**üìå –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?**`  
   ‚Ä¢ –§–æ—Ä–º–∞—Ç: –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ + —ç–º–æ–¥–∑–∏ –¥–ª—è —à–∞–≥–æ–≤  
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä: `1. **–û—á–∏—Å—Ç–∏—Ç–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å** –æ—Ç –≥—Ä—è–∑–∏ –∏ –º–∞—Å–ª–∞ üßπ`

‚ö†Ô∏è **7. –í–∞–∂–Ω—ã–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è:**  
   ‚Ä¢ –í—ã–¥–µ–ª—è–π –∑–Ω–∞–∫–æ–º `‚ö†Ô∏è` –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)  
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä: `**‚ö†Ô∏è –í–∞–∂–Ω–æ:** –ù–µ –Ω–∞–Ω–æ—Å–∏—Ç–µ –ø—Ä–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –Ω–∏–∂–µ -5¬∞C!`

üì¶ **8. –£—Å–ª–æ–≤–∏—è —Ö—Ä–∞–Ω–µ–Ω–∏—è/–≥–∞—Ä–∞–Ω—Ç–∏—è:**  
   ‚Ä¢ –ö—Ä–∞—Ç–∫–æ, —Å–ø–∏—Å–∫–æ–º —Å —ç–º–æ–¥–∑–∏ üì¶üîí  
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä: `‚Ä¢ –°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è: **24 –º–µ—Å—è—Ü–∞** –≤ –≥–µ—Ä–º–µ—Ç–∏—á–Ω–æ–π —Ç–∞—Ä–µ`

üîé **9. SEO-–∫–ª—é—á–∏:**  
   ‚Ä¢ –ë–ª–æ–∫ –≤ –∫–æ–Ω—Ü–µ: `**SEO-–∫–ª—é—á–∏:** *[—Ñ—Ä–∞–∑–∞ 1], [—Ñ—Ä–∞–∑–∞ 2], ...*`  
   ‚Ä¢ 5-10 —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é

üéØ **10. –§–∏–Ω–∞–ª:**  
   ‚Ä¢ –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é —Å —ç–º–æ–¥–∑–∏ üéØ + **–∂–∏—Ä–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç**  
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä: `**üéØ –§–∏–Ω–∞–ª:** –ó–∞–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–±–Ω—É—é –ø–∞—Ä—Ç–∏—é —Å–µ–≥–æ–¥–Ω—è ‚Äî –∑–∞—â–∏—Ç–∏—Ç–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –Ω–∞ 10 –ª–µ—Ç!`

**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É:**  
‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω—ã–π —Ñ–æ–∫—É—Å: –≤—ã–≥–æ–¥—ã > —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏  
‚Ä¢ –¶–∏—Ñ—Ä—ã –∏ –º–µ—Ç—Ä–∏–∫–∏ –≤–µ–∑–¥–µ, –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–æ (—ç–∫–æ–Ω–æ–º–∏—è 70%, —Å—Ä–æ–∫ 10 –ª–µ—Ç)  
‚Ä¢ –≠–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∞–∫—Ü–µ–Ω—Ç–∞ (–Ω–µ –±–æ–ª–µ–µ 1 –Ω–∞ –ø—É–Ω–∫—Ç)  
‚Ä¢ –ñ–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –∏ —Ü–∏—Ñ—Ä  
‚Ä¢ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–ø–∏—Å—ã–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç  `;
    
    const chatContainer = document.getElementById('chat-container');
    const messagesDiv = document.getElementById('messages');
    const userInput = document.getElementById('user-input');
    const sendBtn = document.getElementById('send-btn');
    const apiKeyInput = document.getElementById('api-key');
    const saveKeyBtn = document.getElementById('save-key');
    const clearBtn = document.getElementById('clear-btn');
    const exportBtn = document.getElementById('export-btn');
    const statusDiv = document.getElementById('status');
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ API –∫–ª—é—á–∞
    const savedApiKey = localStorage.getItem('deepseekApiKey');
    if (savedApiKey) {
        apiKeyInput.value = savedApiKey;
    }
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ API –∫–ª—é—á–∞
    saveKeyBtn.addEventListener('click', () => {
        const key = apiKeyInput.value.trim();
        if (key) {
            localStorage.setItem('deepseekApiKey', key);
            showStatus('–ö–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω! ‚úÖ', 'success');
        } else {
            showStatus('–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á', 'error');
        }
    });
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    async function sendMessage() {
        const message = userInput.value.trim();
        const apiKey = localStorage.getItem('deepseekApiKey');
        
        if (!message) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', 'warning');
            return;
        }
        
        if (!apiKey) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ API –∫–ª—é—á! üîë', 'error');
            return;
        }
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        addMessage(message, 'user');
        userInput.value = '';
        showStatus('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞... ‚è≥', 'processing');
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
        showTypingIndicator();
        
        try {
            const response = await fetch(API_URL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${apiKey}`
                },
                body: JSON.stringify({
                    model: DEFAULT_MODEL,
                    messages: [
                        {
                            role: "system",
                            content: BASE_PROMPT
                        },
                        {
                            role: "user",
                            content: message
                        }
                    ],
                    max_tokens: MAX_TOKENS,
                    stream: false
                })
            });
            
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error?.message || `–û—à–∏–±–∫–∞ API: ${response.status}`);
            }
            
            const data = await response.json();
            const botResponse = data.choices[0].message.content;
            
            // –£–¥–∞–ª–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ –∏ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç
            removeTypingIndicator();
            addMessage(botResponse, 'bot');
            showStatus('–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ‚úÖ', 'ready');
            
            // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∫–æ–¥–∞
            setTimeout(() => {
                document.querySelectorAll('pre code').forEach(block => {
                    hljs.highlightElement(block);
                });
            }, 100);
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            removeTypingIndicator();
            addMessage(`‚ö†Ô∏è **–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞**\n${error.message}`, 'bot');
            showStatus('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ ‚ùå', 'error');
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
    function addMessage(content, sender) {
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('message', `${sender}-message`);
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞
        let formattedContent = content;
        formattedContent = formattedContent.replace(/```(\w+)?\s*([\s\S]*?)```/g, '<pre><code class="language-$1">$2</code></pre>');
        formattedContent = formattedContent.replace(/`([^`]+)`/g, '<code>$1</code>');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö
        formattedContent = formattedContent.replace(
            /^(üîç|üß™|‚öôÔ∏è|üì¶|üí°|üåä|‚ö†Ô∏è|üöÄ|‚úÖ|‚ùå|üîÑ|üè≠|‚öñÔ∏è)\s*\*\*(.*?)\*\*/gm, 
            '<div class="header-block"><span class="header-emoji">$1</span><strong>$2</strong></div>'
        );
        
        messageDiv.innerHTML = formattedContent;
        messagesDiv.appendChild(messageDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    function showTypingIndicator() {
        const typingDiv = document.createElement('div');
        typingDiv.id = 'typing-indicator';
        typingDiv.classList.add('message', 'bot-message');
        
        const typingContent = document.createElement('div');
        typingContent.className = 'typing-indicator';
        
        for (let i = 0; i < 3; i++) {
            const dot = document.createElement('div');
            dot.className = 'typing-dot';
            typingContent.appendChild(dot);
        }
        
        typingDiv.appendChild(typingContent);
        messagesDiv.appendChild(typingDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }
    
    // –£–¥–∞–ª–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    function removeTypingIndicator() {
        const typingIndicator = document.getElementById('typing-indicator');
        if (typingIndicator) {
            typingIndicator.remove();
        }
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
    clearBtn.addEventListener('click', () => {
        messagesDiv.innerHTML = '';
        showStatus('–ß–∞—Ç –æ—á–∏—â–µ–Ω üßπ', 'success');
    });
    
    // –≠–∫—Å–ø–æ—Ä—Ç —á–∞—Ç–∞
    exportBtn.addEventListener('click', () => {
        const chatContent = Array.from(messagesDiv.querySelectorAll('.message'))
            .map(msg => {
                const sender = msg.classList.contains('user-message') ? '–í—ã' : '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'
                return `${sender}: ${msg.textContent}`;
            })
            .join('\n\n');
        
        const blob = new Blob([chatContent], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        
        const a = document.createElement('a');
        a.href = url;
        a.download = `deepseek-chat-${new Date().toISOString().slice(0, 10)}.txt`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        showStatus('–ß–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω üì•', 'success');
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    function showStatus(text, type) {
        statusDiv.textContent = text;
        statusDiv.className = 'status';
        
        switch (type) {
            case 'success':
                statusDiv.classList.add('status-success');
                break;
            case 'error':
                statusDiv.classList.add('status-error');
                break;
            case 'warning':
                statusDiv.classList.add('status-warning');
                break;
            case 'processing':
                statusDiv.classList.add('status-processing');
                break;
            default:
                statusDiv.classList.add('status-ready');
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    sendBtn.addEventListener('click', sendMessage);
    
    userInput.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞
    showStatus('–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ‚úÖ', 'ready');
});
