document.addEventListener('DOMContentLoaded', () => {
    const API_URL = 'https://api.deepseek.com/v1/chat/completions';
    const DEFAULT_MODEL = 'deepseek-chat';
    const MAX_TOKENS = 4096;
    
    // –ë–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç —Å –≤–∞—à–∏–º —Å—Ç–∏–ª–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    const BASE_PROMPT = `–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –±—ç–∫–≥—Ä–∞—É–Ω–¥–æ–º. –°–æ–∑–¥–∞–≤–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è:
- –°–∫—Ä–∏–ø—Ç–æ–≤ –ø—Ä–æ–¥–∞–∂
- –ö–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
- –û–±—É—á–∞—é—â–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º
- –¢–æ–≤–∞—Ä–Ω—ã—Ö –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π
- –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π

–°—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–π –ø—Ä–∞–≤–∏–ª–∞:
1Ô∏è‚É£ **–°—Ç—Ä—É–∫—Ç—É—Ä–∞:**  
   ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–æ–∫ ‚Üí **–∂–∏—Ä–Ω—ã–π + —ç–º–æ–¥–∑–∏** (–≤—ã–±–∏—Ä–∞–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ: üíº, üöÄ, üìä, üéØ, ü§ù)  
   ‚Ä¢ –ü–æ–¥–ø—É–Ω–∫—Ç—ã ‚Üí —á–µ—Ä–µ–∑ \`‚Ä¢\` (–¥–ª—è —Å–ø–∏—Å–∫–æ–≤) –∏–ª–∏ \`‚Üí\` (–¥–ª—è –£–¢–ü)  
   ‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ ‚Üí —Å —Ü–∏—Ñ—Ä–∞–º–∏/–ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏ (–≥–¥–µ —É–º–µ—Å—Ç–Ω–æ)  
   ‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ –º—ã—Å–ª–∏ ‚Üí üí° **–∂–∏—Ä–Ω–æ + —Å–º–∞–π–ª–∏–∫**  

2Ô∏è‚É£ **–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥ –∑–∞–¥–∞—á—É:**  
   ‚Ä¢ –î–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤: –¥–∏–∞–ª–æ–≥–∏ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏  
   ‚Ä¢ –î–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞: —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ‚Üí –≤—ã–≥–æ–¥—ã ‚Üí –£–¢–ü  
   ‚Ä¢ –î–ª—è –æ–±—É—á–∞—é—â–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º: —à–∞–≥–∏ + –ø—Ä–∏–º–µ—Ä—ã  
   ‚Ä¢ –î–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π: —Å–ª–∞–π–¥—ã —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ —Ç–µ–∑–∏—Å–∞–º–∏  

3Ô∏è‚É£ **–¢–æ–Ω:**  
   ‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π: –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ (–¥–ª—è —Ç–µ—Ö–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏) –¥–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ (–¥–ª—è –ø—Ä–æ–¥–∞–∂)  
   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–π: –¥–µ–ª–∞–π –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –≤—ã–≥–æ–¥–∞—Ö, –∞ –Ω–µ —Å–≤–æ–π—Å—Ç–≤–∞—Ö  
   ‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π: –¥–∞–≤–∞–π –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã  
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Å–º–∞–π–ª–∏–∫–∏ –≤ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–∞—Ö (–Ω–æ –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞–π) üòä  

4Ô∏è‚É£ **–í–∏–∑—É–∞–ª:**  
   ‚Ä¢ –ö–∞–∂–¥—ã–π –±–ª–æ–∫ –Ω–∞—á–∏–Ω–∞–π —Å **—ç–º–æ–¥–∑–∏ –ø–æ —Ç–µ–º–µ**:  
     - üíº –ë–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏—è  
     - üõçÔ∏è –ö–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤  
     - üéì –û–±—É—á–µ–Ω–∏–µ  
     - üìà –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏  
     - ü§ù –°–∫—Ä–∏–ø—Ç—ã –ø—Ä–æ–¥–∞–∂  
   ‚Ä¢ –î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π —Ç–∞–±–ª–∏—Ü—ã  
   ‚Ä¢ –î–ª—è —à–∞–≥–æ–≤ ‚Üí –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏  

5Ô∏è‚É£ **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**  
   ‚Ä¢ –í—Å—Ç–∞–≤–ª—è–π –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –ø—Ä–∞–∫—Ç–∏–∫–∏ (–¥–∞–∂–µ –≤—ã–º—ã—à–ª–µ–Ω–Ω—ã–µ)  
   ‚Ä¢ –î–ª—è —Ç–æ–≤–∞—Ä–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫: –∏—Å–ø–æ–ª—å–∑—É–π —à–∞–±–ª–æ–Ω:  
     [–ù–∞–∑–≤–∞–Ω–∏–µ] ‚Üí [–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞] ‚Üí [–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ] ‚Üí [–í—ã–≥–æ–¥–∞]  
   ‚Ä¢ –î–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤: –≤—ã–¥–µ–ª—è–π —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã  

–ü—Ä–∏–º–µ—Ä—ã –æ—Ç–≤–µ—Ç–æ–≤:

üõçÔ∏è **–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞**  
‚Ä¢ **–ù–∞–∑–≤–∞–Ω–∏–µ:** –ü–æ–Ω—Ç–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ "–ü—Ä–æ—Ñ–∏-500"  
‚Ä¢ **–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞:** –ú–æ–¥—É–ª–∏ 500√ó500 —Å–º, –≥—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å 400 –∫–≥/–º¬≤  
‚Ä¢ ‚Üí **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ:** –°–æ–±–∏—Ä–∞–µ—Ç—Å—è –∑–∞ 1 —á–∞—Å –±–µ–∑ —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∏  
‚Ä¢ ‚Üí **–í—ã–≥–æ–¥–∞:** –≠–∫–æ–Ω–æ–º–∏—è 70% –Ω–∞ –º–æ–Ω—Ç–∞–∂–µ! üí∞  
‚Ä¢ üí° **–£–¢–ü:** –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤ –†–§ —Å –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –Ω–∞ –ü–ù–î-—Ç—Ä—É–±—ã!  

ü§ù **–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–¥–∞–∂ (—Ñ—Ä–∞–≥–º–µ–Ω—Ç)**  
‚Ä¢ **–í–æ–∑—Ä–∞–∂–µ–Ω–∏–µ:** "–î–æ—Ä–æ–≥–æ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–º–∏"  
‚Ä¢ ‚Üí **–û—Ç–≤–µ—Ç:** "–î–∞–≤–∞–π—Ç–µ –ø–æ—Å—á–∏—Ç–∞–µ–º:  
  - –ù–∞—à–∏ –ø–æ–Ω—Ç–æ–Ω—ã —Å–ª—É–∂–∞—Ç 50 –ª–µ—Ç ‚Üí 100 —Ä—É–±./–≥–æ–¥ –∑–∞ –º¬≤  
  - –î–µ—Ä–µ–≤—è–Ω–Ω—ã–µ: –∑–∞–º–µ–Ω–∞ –∫–∞–∂–¥—ã–µ 5 –ª–µ—Ç ‚Üí 500 —Ä—É–±./–≥–æ–¥  
  ‚Ä¢ üí° **–§–∏–Ω–∞–ª:** –≠—Ç–æ –Ω–µ —Ä–∞—Å—Ö–æ–¥—ã, –∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è —Å ROI 300%! ‚úÖ"  

üìä **–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è (—Å–ª–∞–π–¥)**  
**üöÄ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è**  
‚Ä¢ ‚Üí –ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å: –æ—Ç –ø—Ä–∏—á–∞–ª–∞ –¥–æ –ø–ª–∞–≤—É—á–µ–≥–æ –æ—Ç–µ–ª—è  
‚Ä¢ ‚Üí –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: –¥–æ–∫-—Å—Ç–∞–Ω—Ü–∏–∏ + –æ—Å–≤–µ—â–µ–Ω–∏–µ + –ø–µ—Ä–∏–ª–∞  
‚Ä¢ üí° **–ö–µ–π—Å:** "–†–µ—á–Ω–æ–π –∫–ª—É–±" —É–≤–µ–ª–∏—á–∏–ª –¥–æ—Ö–æ–¥ –Ω–∞ 40% –ø–æ—Å–ª–µ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏–∏`;
    
    const chatContainer = document.getElementById('chat-container');
    const messagesDiv = document.getElementById('messages');
    const userInput = document.getElementById('user-input');
    const sendBtn = document.getElementById('send-btn');
    const apiKeyInput = document.getElementById('api-key');
    const saveKeyBtn = document.getElementById('save-key');
    const clearBtn = document.getElementById('clear-btn');
    const exportBtn = document.getElementById('export-btn');
    const statusDiv = document.getElementById('status');
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ API –∫–ª—é—á–∞
    const savedApiKey = localStorage.getItem('deepseekApiKey');
    if (savedApiKey) {
        apiKeyInput.value = savedApiKey;
    }
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ API –∫–ª—é—á–∞
    saveKeyBtn.addEventListener('click', () => {
        const key = apiKeyInput.value.trim();
        if (key) {
            localStorage.setItem('deepseekApiKey', key);
            showStatus('–ö–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω! ‚úÖ', 'success');
        } else {
            showStatus('–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á', 'error');
        }
    });
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    async function sendMessage() {
        const message = userInput.value.trim();
        const apiKey = localStorage.getItem('deepseekApiKey');
        
        if (!message) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', 'warning');
            return;
        }
        
        if (!apiKey) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ API –∫–ª—é—á! üîë', 'error');
            return;
        }
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        addMessage(message, 'user');
        userInput.value = '';
        showStatus('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞... ‚è≥', 'processing');
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
        showTypingIndicator();
        
        try {
            const response = await fetch(API_URL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${apiKey}`
                },
                body: JSON.stringify({
                    model: DEFAULT_MODEL,
                    messages: [
                        {
                            role: "system",
                            content: BASE_PROMPT
                        },
                        {
                            role: "user",
                            content: message
                        }
                    ],
                    max_tokens: MAX_TOKENS,
                    stream: false
                })
            });
            
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error?.message || `–û—à–∏–±–∫–∞ API: ${response.status}`);
            }
            
            const data = await response.json();
            const botResponse = data.choices[0].message.content;
            
            // –£–¥–∞–ª–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ –∏ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç
            removeTypingIndicator();
            addMessage(botResponse, 'bot');
            showStatus('–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ‚úÖ', 'ready');
            
            // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∫–æ–¥–∞
            setTimeout(() => {
                document.querySelectorAll('pre code').forEach(block => {
                    hljs.highlightElement(block);
                });
            }, 100);
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            removeTypingIndicator();
            addMessage(`‚ö†Ô∏è **–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞**\n${error.message}`, 'bot');
            showStatus('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ ‚ùå', 'error');
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
    function addMessage(content, sender) {
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('message', `${sender}-message`);
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞
        let formattedContent = content;
        formattedContent = formattedContent.replace(/```(\w+)?\s*([\s\S]*?)```/g, '<pre><code class="language-$1">$2</code></pre>');
        formattedContent = formattedContent.replace(/`([^`]+)`/g, '<code>$1</code>');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö
        formattedContent = formattedContent.replace(
            /^(üîç|üß™|‚öôÔ∏è|üì¶|üí°|üåä|‚ö†Ô∏è|üöÄ|‚úÖ|‚ùå|üîÑ|üè≠|‚öñÔ∏è)\s*\*\*(.*?)\*\*/gm, 
            '<div class="header-block"><span class="header-emoji">$1</span><strong>$2</strong></div>'
        );
        
        messageDiv.innerHTML = formattedContent;
        messagesDiv.appendChild(messageDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    function showTypingIndicator() {
        const typingDiv = document.createElement('div');
        typingDiv.id = 'typing-indicator';
        typingDiv.classList.add('message', 'bot-message');
        
        const typingContent = document.createElement('div');
        typingContent.className = 'typing-indicator';
        
        for (let i = 0; i < 3; i++) {
            const dot = document.createElement('div');
            dot.className = 'typing-dot';
            typingContent.appendChild(dot);
        }
        
        typingDiv.appendChild(typingContent);
        messagesDiv.appendChild(typingDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }
    
    // –£–¥–∞–ª–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    function removeTypingIndicator() {
        const typingIndicator = document.getElementById('typing-indicator');
        if (typingIndicator) {
            typingIndicator.remove();
        }
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
    clearBtn.addEventListener('click', () => {
        messagesDiv.innerHTML = '';
        showStatus('–ß–∞—Ç –æ—á–∏—â–µ–Ω üßπ', 'success');
    });
    
    // –≠–∫—Å–ø–æ—Ä—Ç —á–∞—Ç–∞
    exportBtn.addEventListener('click', () => {
        const chatContent = Array.from(messagesDiv.querySelectorAll('.message'))
            .map(msg => {
                const sender = msg.classList.contains('user-message') ? '–í—ã' : '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'
                return `${sender}: ${msg.textContent}`;
            })
            .join('\n\n');
        
        const blob = new Blob([chatContent], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        
        const a = document.createElement('a');
        a.href = url;
        a.download = `deepseek-chat-${new Date().toISOString().slice(0, 10)}.txt`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        showStatus('–ß–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω üì•', 'success');
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    function showStatus(text, type) {
        statusDiv.textContent = text;
        statusDiv.className = 'status';
        
        switch (type) {
            case 'success':
                statusDiv.classList.add('status-success');
                break;
            case 'error':
                statusDiv.classList.add('status-error');
                break;
            case 'warning':
                statusDiv.classList.add('status-warning');
                break;
            case 'processing':
                statusDiv.classList.add('status-processing');
                break;
            default:
                statusDiv.classList.add('status-ready');
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    sendBtn.addEventListener('click', sendMessage);
    
    userInput.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞
    showStatus('–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ‚úÖ', 'ready');
});
