document.addEventListener('DOMContentLoaded', () => {
    const API_URL = 'https://api.deepseek.com/v1/chat/completions';
    const DEFAULT_MODEL = 'deepseek-reasoner';
    const MAX_TOKENS = 32768;
    
    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –±–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
    const BASE_PROMPT = `**–¢—ã ‚Äî Growth Architect & Senior Tech Lead.** –û–±—ä–µ–¥–∏–Ω—è–µ—à—å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ (–ü—Ä–æ–¥–∞–∂–∏, –û–±—É—á–µ–Ω–∏–µ, –ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥, –¢–µ—Ö->–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥) –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö (–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ü–û, –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –ö–æ–¥–∏–Ω–≥). **–î–∞–≤–∞–π –ø—Ä–∏–º–µ–Ω–∏–º—ã–µ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ —Ä–µ—à–µ–Ω–∏—è** —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –∏–∑–º–µ—Ä–∏–º—É—é –ø–æ–ª—å–∑—É.

### üîß –£–õ–£–ß–®–ï–ù–ò–Ø –°–¢–†–£–ö–¢–£–†–´
1. **–†–æ–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ workflow**:
   - \`[–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä]\` ‚Üí –°–∏—Å—Ç–µ–º–Ω–æ–µ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤—ã–±–æ—Ä —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
   - \`[–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç]\` ‚Üí –ê–ª–≥–æ—Ä–∏—Ç–º—ã, –ø–∞—Ç—Ç–µ—Ä–Ω—ã, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
   - \`[–ö–æ–¥–µ—Ä]\` ‚Üí –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞, —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥, –¥–µ–±–∞–≥–≥–∏–Ω–≥
2. **–ì–∏–±—Ä–∏–¥–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã**:
   \`[–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥ + –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç] ‚Üí –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä SEO-—Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞ Python\`
3. **–¢–µ—Ö-–±–ª–æ–∫–∏**:
   - –î–æ–±–∞–≤–ª–µ–Ω—ã —à–∞–±–ª–æ–Ω—ã –¥–ª—è –∫–æ–¥–∞/–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
   - –ß–µ—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏

### ‚úÖ –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (–û–ë–ù–û–í–õ–Å–ù–ù–´–ô)
**–ó–∞–≥–æ–ª–æ–≤–æ–∫:** \`[–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞]‚Üí[–†–æ–ª—å]‚Üí[–ó–∞–¥–∞—á–∞]\`  
–ü—Ä–∏–º–µ—Ä: \`[–¢–µ—Ö->–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥]‚Üí[–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä]‚Üí–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–∞–π–ø–ª–∞–π–Ω–∞\`

**–°—Ç—Ä—É–∫—Ç—É—Ä–∞ (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è):**
1. **–ó–∞–¥–∞—á–∞** (1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ): –°—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
2. **–°—Ç—Ä–∞—Ç–µ–≥–∏—è** (2-3 –ø—É–Ω–∫—Ç–∞):  
   ‚îÄ *–ë–∏–∑–Ω–µ—Å-–≤—ã–≥–æ–¥–∞* ‚Üí "–£–≤–µ–ª–∏—á–∏—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ X%"  
   ‚îÄ *–¢–µ—Ö-–ø–æ–¥—Ö–æ–¥* ‚Üí "–ò—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω Strategy –¥–ª—è..."
3. **–†–µ–∞–ª–∏–∑–∞—Ü–∏—è (MVP):**
   \`\`\`javascript
   // [–ö–æ–¥–µ—Ä] –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ (—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏!)
   function seoOptimize(text) {
     return applyLSI(keywords); // [–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç] O(n) —Å–ª–æ–∂–Ω–æ—Å—Ç—å
   }
   \`\`\`
   - –î–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã: –¥–∏–∞–≥—Ä–∞–º–º–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ \`[Client]‚Üí[API]‚Üí[DB]\`
4. **KPI** (—Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö):
   | –ú–µ—Ç—Ä–∏–∫–∞       | –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç     | –¶–µ–ª—å  |
   |---------------|----------------|-------|
   | –°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ | Lighthouse | ‚â§1.5s |

### üöÄ –ê–í–¢–û-–†–ï–ñ–ò–ú–´ (–î–û–ë–ê–í–õ–ï–ù–´ –¢–ï–•-–†–û–õ–ò)
**\`[–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ]\`** –∑–∞–ø—Ä–æ—Å—ã ("–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç...", "–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π –∞–ª–≥–æ—Ä–∏—Ç–º..."):  
‚Üí *–î–µ–π—Å—Ç–≤—É–π:*  
1. [–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä] ‚Üí –í—ã–±–æ—Ä —Å—Ç–µ–∫–∞ (–æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ)  
2. [–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç] ‚Üí –ü—Å–µ–≤–¥–æ–∫–æ–¥/—Å—Ö–µ–º–∞  
3. [–ö–æ–¥–µ—Ä] ‚Üí –†–∞–±–æ—á–∏–π –∫–æ–¥ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π edge-cases  

**\`[–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞]\`** –∑–∞–¥–∞—á–∏ ("–°–ø—Ä–æ–µ–∫—Ç–∏—Ä—É–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å..."):  
‚Üí *–î–µ–π—Å—Ç–≤—É–π:*  
‚îå‚îÄ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã ‚Üí –°–µ—Ä–≤–∏—Å A (Go), –°–µ—Ä–≤–∏—Å B (Python)  
‚îú‚îÄ Data Flow ‚Üí RabbitMQ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏  
‚îî‚îÄ Scaling ‚Üí Kubernetes + HPA  

**\`[–ì–∏–±—Ä–∏–¥]\`** –ø—Ä–∏–º–µ—Ä ("–°–æ–∑–¥–∞–π CRM –¥–ª—è –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂"):  
‚Üí –ö–æ–º–±–∏–Ω–∏—Ä—É–π:  
- [–ü—Ä–æ–¥–∞–∂–∏] ‚Üí –í–æ—Ä–æ–Ω–∫–∞ —Å–¥–µ–ª–æ–∫  
- [–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç] ‚Üí –°—Ö–µ–º–∞ –ë–î  
- [–ö–æ–¥–µ—Ä] ‚Üí API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã  

### ‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–ê–í–ò–õ–ê
**‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:**  
- –î–ª—è –∫–æ–¥–∞ –ø–æ–ª–Ω—ã–π –ª–∏—Å—Ç–∏–Ω–≥ –∫–æ–¥–∞, –≥–æ—Ç–æ–≤—ã–π –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞, –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π  
- –¢–µ—Ö-—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ‚Üí **–í—ã–≥–æ–¥–∞** ("–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ Redis ‚Üí —Å–Ω–∏–∑–∏—Ç latency –Ω–∞ 70%")  
- –í –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö: –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã  

**‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–æ:**  
- –û–±—â–∏–µ —Å–æ–≤–µ—Ç—ã –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —Å—Ç–µ–∫—É ("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")  
- –ö–æ–¥ –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏  
- "–ú–æ–∂–Ω–æ —Ç–∞–∫ —Å–¥–µ–ª–∞—Ç—å" ‚Üí –¥–∞–≤–∞–π 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å –ø–ª—é—Å–∞–º–∏/–º–∏–Ω—É—Å–∞–º–∏  

### üß† –ö–û–ì–ù–ò–¢–ò–í–ù–ê–Ø –ú–û–î–ï–õ–¨
1. –°–Ω–∞—á–∞–ª–∞ **–ø–æ–ª—å–∑–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞**, –ø–æ—Ç–æ–º —Ç–µ—Ö-—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è  
2. –í –∫–æ–¥–µ: —á–∏—Ç–∞–µ–º–æ—Å—Ç—å > –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è  
3. –î–ª—è –æ–±—É—á–µ–Ω–∏—è: –ø—Ä–∞–∫—Ç–∏–∫–∞ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞`;
    
    const chatContainer = document.getElementById('chat-container');
    const messagesDiv = document.getElementById('messages');
    const userInput = document.getElementById('user-input');
    const sendBtn = document.getElementById('send-btn');
    const apiKeyInput = document.getElementById('api-key');
    const saveKeyBtn = document.getElementById('save-key');
    const clearBtn = document.getElementById('clear-btn');
    const exportBtn = document.getElementById('export-btn');
    const statusDiv = document.getElementById('status');
    
    // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    let chatHistory = [
        {
            role: "system",
            content: BASE_PROMPT
        }
    ];
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ API –∫–ª—é—á–∞
    const savedApiKey = localStorage.getItem('deepseekApiKey');
    if (savedApiKey) {
        apiKeyInput.value = savedApiKey;
    }
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ API –∫–ª—é—á–∞
    saveKeyBtn.addEventListener('click', () => {
        const key = apiKeyInput.value.trim();
        if (key) {
            localStorage.setItem('deepseekApiKey', key);
            showStatus('–ö–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω! ‚úÖ', 'success');
        } else {
            showStatus('–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á', 'error');
        }
    });
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    async function sendMessage() {
        const message = userInput.value.trim();
        const apiKey = localStorage.getItem('deepseekApiKey');
        
        if (!message) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', 'warning');
            return;
        }
        
        if (!apiKey) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ API –∫–ª—é—á! üîë', 'error');
            return;
        }
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        addMessage(message, 'user');
        userInput.value = '';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
        chatHistory.push({
            role: "user",
            content: message
        });
        
        showStatus('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞... ‚è≥', 'processing');
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
        showTypingIndicator();
        
        try {
            const response = await fetch(API_URL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${apiKey}`
                },
                body: JSON.stringify({
                    model: DEFAULT_MODEL,
                    messages: chatHistory,
                    max_tokens: MAX_TOKENS,
                    stream: false
                })
            });
            
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error?.message || `–û—à–∏–±–∫–∞ API: ${response.status}`);
            }
            
            const data = await response.json();
            const botResponse = data.choices[0].message.content;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
            chatHistory.push({
                role: "assistant",
                content: botResponse
            });
            
            // –£–¥–∞–ª–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ –∏ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç
            removeTypingIndicator();
            addMessage(botResponse, 'bot');
            showStatus('–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ‚úÖ', 'ready');
            
            // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∫–æ–¥–∞ (—Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è highlight.js)
            if (typeof hljs !== 'undefined') {
                setTimeout(() => {
                    document.querySelectorAll('pre code').forEach(block => {
                        hljs.highlightElement(block);
                    });
                }, 100);
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            removeTypingIndicator();
            addMessage(`‚ö†Ô∏è **–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞**\n${error.message}`, 'bot');
            showStatus('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ ‚ùå', 'error');
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
    function addMessage(content, sender) {
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('message', `${sender}-message`);
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞
        let formattedContent = content;
        formattedContent = formattedContent.replace(/```(\w+)?\s*([\s\S]*?)```/g, '<pre><code class="language-$1">$2</code></pre>');
        formattedContent = formattedContent.replace(/`([^`]+)`/g, '<code>$1</code>');
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å —ç–º–æ–¥–∑–∏
        formattedContent = formattedContent.replace(
            /^(\p{Emoji_Presentation}\s*)\*\*(.*?)\*\*/gmu, 
            '<div class="header-block"><span class="header-emoji">$1</span><strong>$2</strong></div>'
        );
        
        messageDiv.innerHTML = formattedContent;
        messagesDiv.appendChild(messageDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    function showTypingIndicator() {
        const typingDiv = document.createElement('div');
        typingDiv.id = 'typing-indicator';
        typingDiv.classList.add('message', 'bot-message');
        
        const typingContent = document.createElement('div');
        typingContent.className = 'typing-indicator';
        
        for (let i = 0; i < 3; i++) {
            const dot = document.createElement('div');
            dot.className = 'typing-dot';
            typingContent.appendChild(dot);
        }
        
        typingDiv.appendChild(typingContent);
        messagesDiv.appendChild(typingDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }
    
    // –£–¥–∞–ª–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    function removeTypingIndicator() {
        const typingIndicator = document.getElementById('typing-indicator');
        if (typingIndicator) {
            typingIndicator.remove();
        }
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
    clearBtn.addEventListener('click', () => {
        messagesDiv.innerHTML = '';
        chatHistory = [
            {
                role: "system",
                content: BASE_PROMPT
            }
        ];
        showStatus('–ß–∞—Ç –æ—á–∏—â–µ–Ω üßπ', 'success');
    });
    
    // –≠–∫—Å–ø–æ—Ä—Ç —á–∞—Ç–∞
    exportBtn.addEventListener('click', () => {
        const chatContent = Array.from(messagesDiv.querySelectorAll('.message'))
            .map(msg => {
                const sender = msg.classList.contains('user-message') ? '–í—ã' : '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç';
                return `${sender}: ${msg.textContent}`;
            })
            .join('\n\n');
        
        const blob = new Blob([chatContent], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        
        const a = document.createElement('a');
        a.href = url;
        a.download = `deepseek-chat-${new Date().toISOString().slice(0, 10)}.txt`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        showStatus('–ß–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω üì•', 'success');
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    function showStatus(text, type) {
        statusDiv.textContent = text;
        statusDiv.className = 'status';
        
        switch (type) {
            case 'success':
                statusDiv.classList.add('status-success');
                break;
            case 'error':
                statusDiv.classList.add('status-error');
                break;
            case 'warning':
                statusDiv.classList.add('status-warning');
                break;
            case 'processing':
                statusDiv.classList.add('status-processing');
                break;
            default:
                statusDiv.classList.add('status-ready');
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    sendBtn.addEventListener('click', sendMessage);
    
    userInput.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞
    showStatus('–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ‚úÖ', 'ready');
});
